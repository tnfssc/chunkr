apiVersion: apps/v1
kind: Deployment
metadata:
  name: chunkmydocs
  namespace: chunkmydocs
  labels:
    app.kubernetes.io/name: chunkmydocs
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chunkmydocs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chunkmydocs
      annotations:
        vpc.amazonaws.com/resource-limits: '{"vpc-cni-network-config": "true"}'
    spec:
      containers:
      - name: chunkmydocs
        image: luminainc/chunkmydocs:d4afe2f
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: chunkmydocs-secrets
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: chunkmydocs-service
  namespace: chunkmydocs
  labels:
    app.kubernetes.io/name: chunkmydocs
spec:
  selector:
    app.kubernetes.io/name: chunkmydocs
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chunkmydocs-ingress
  namespace: chunkmydocs
  labels:
    app: chunkmydocs
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chunkmydocs-service
            port:
              number: 8000
